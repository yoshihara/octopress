---
layout: post
title: "groongaのコマンドラインインタフェースをほんのり使いやすくするgrnlineというラッパーをつくりました"
date: 2013-06-15 23:12
comments: true
categories: my groonga
---

## 動機：groongaを触った話
[全文検索エンジンgroonga](http://groonga.org/ja/)にはコマンドラインから実行することのできるインタフェースがあります。例えば、次のようにするとコマンドラインのインタフェースで起動します。

    % groonga -n /path/to/db

[groongaのチュートリアル](http://groonga.org/ja/docs/tutorial.html)はこのコマンドラインのインタフェースを使うようになっています。が、昔このチュートリアルをやってる時にtypoした位置まで方向キーで戻れなくて、BSでその位置まで消して戻らないといけないのでコピペの衝動にかられました。ですが、私は自分で打たないとさらに覚えられないのでコピペしたくなかったので大変でした。チュートリアルやるのって大体コマンドとか打ち慣れてないころなので、割と打ち間違えるのよね……わたくし……。

で、当時はgrnwrapというPythonでできたラッパーを使っていたような記憶があるのですが、自分で作ったほうが色々やりたいようにできるよねえ、と思いました。（あと、私のやり方がまずいのか前からなのか、複数行の入力がgrnwrapだとできない……）

## grnline：つくったものの話

ということでRubyでgrnline（ぐるんらいん）というgemを自作しました。[ソースコードはGitHubにあります。](https://github.com/yoshihara/grnline)現在のバージョンは0.0.2です。名前の由来は語感です。

gemとしてrubygems.orgにpushしているので、次のコマンドでインストールできます。

    % gem install grnline

インストールするとgrnlineコマンドが使えるようになります。grnlineはgroongaのコマンドラインのインタフェースに次の機能を追加します。

* 入力時に方向キーでカーソルの移動（Ctrl-Aで先頭に移動とかもできます）
* groongaコマンドの補完
* 入力を履歴として保持
* 出力形式がJSON（デフォルト）のときのみ結果を整形表示

上3つはReadlineの機能を利用しています。JSONの整形表示はjson gemを使用しています。例えば、次のように整形して表示します。（最初の行の"groonga> "がコマンド入力している行です）


    groonga> tokenize TokenBigram "groonga"
    [
      [
        0,
        1371307770.1403,
        0.00029301643371582
      ],
      [
        {
          "value": "gr",
          "position": 0
        },
        {
          "value": "ro",
          "position": 1
        },
        {
          "value": "oo",
          "position": 2
        },
        {
          "value": "on",
          "position": 3
        },
        {
          "value": "ng",
          "position": 4
        },
        {
          "value": "ga",
          "position": 5
        },
        {
          "value": "a",
          "position": 6
        }
      ]
    ]

整形表示のON/OFFなど、grnlineについてのオプションについてはインストール後に次のコマンドを実行してください。

    % grnline -- -h

なぜ```"--"```が必要かというと、```"--"```の前に書くとgroongaコマンドに渡すオプションとみなすようにしているからです。というか、```"--"```より前に指定されたものはすべてgroongaコマンドにそのまま丸投げしています。なので、次のように```"--"```を入れないとgroongaのヘルプを表示します。

    % grnline -h

```"--"```の後ろでなく前がgroongaへのオプションになっている理由ですが、groongaのラッパーとしてgrnlineを使って欲しいので、groongaを使うように使えたらいいなあと思ったからです。groongaを実行するときに書くオプションはgrnlineでも同じようにかけるとべんりかなあとおもいました。一方、grnlineにも整形表示の有無とかまだ実装してないけどページャーの設定とかオプションをとらせたいという理由から、こういう書き方をするようにしました。

## TODO：ケツ叩きリスト

やりたいことリストは公開して己のケツを叩きやがれってばっちゃが言ってた。たぶん上から実装する。

* 履歴を保存して次回以降の実行時も使えるようにする
* groongaコマンドの引数（--tableとか--filterとか）についても補完できるようにする
* 実行結果をページャーで表示
  * pryで実行結果を表示するときみたいなのをやりたい
* JSONのもっと手を抜いた整形表示
  * 現在、json gemのJSON.pretty_generateを使って整形しているけど、そこまで改行しなくていいです感がある
  * 要素が短かったら1行で表示するor一番小さい配列は1行で表示するぐらいの整形表示にしたい。orじゃなくてandかも
  * イメージは[groonga公式がQiitaに書いている記事](http://qiita.com/items/5acfec72a0480d453088)に出てくる実行結果ぐらいの整形加減
  * というか今pryでJSONパースしたらイメージに近い感じの整形表示されたのでこれを目指したい
* JSON以外のoutput_typeでの整形表示
  * どうやってoutput_typeを判別するかが問題（今はJSONとしてパースしようとして、例外起きたらそのまま表示するようにしている）
  * コマンドごとに指定できるので、コマンドをパースしてoutput_typeがあるかどうかを確かめてどうこう、になるとちょっと違う気がする
  * コマンドラインからgroonga触るときにJSON以外をどれくらい使うのかわからない（TSVの方が見やすいとか？）のであまり優先順位高くない（そもそもデフォルトのJSONでやっているチュートリアルで楽したいっていう目的で始めましたし）

## 余談：ひとりでgemリリース

考えたら自分だけでgemリリースしたのって始めてでした。最初入れたかった変更入れ忘れてバージョを無駄に上げた（0.0.1 -> 0.0.2）のはいい思い出です。冗談です。
